name: .NET Core

on:
  push:
  pull_request:
  release:
    types:
      - published
env:
  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.x
        
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1.3
        
    - name: Install dependencies
      run: dotnet restore
      
    - name: Extract Private Key
      run: |
           echo "${{ secrets.PRIVATE_KEY }}" > WmiLight\private_key.base64
           certutil -decode WmiLight\private_key.base64 WmiLight\private_key.snk
           rm WmiLight\private_key.base64 -v
           
    - name: Build .Net Lib
      run: msbuild /m /p:Configuration=Release /p:Platform=x64 WmiLight\WmiLight.csproj
      
    - name: Cleanup Private Key
      run: rm WmiLight\private_key.snk -v
      
    - name: Build Native Lib (x64)
      working-directory: ${{env.GITHUB_WORKSPACE}}     
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=x64 WmiLight.Native\WmiLight.Native.vcxproj
      
    - name: Build Native Lib (x86)
      working-directory: ${{env.GITHUB_WORKSPACE}}     
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=x86 WmiLight.Native\WmiLight.Native.vcxproj
      
    - name: Pack with dotnet
      run: dotnet pack WmiLight\WmiLight.csproj --configuration ${{env.BUILD_CONFIGURATION}} --output nuget-packages --no-build      

    - name: Add Nativ Native Lib to NuGet package
      uses: montudor/action-zip@v1
      with:
        args: zip -u nuget-packages/*.nupkg ddd
      
    - name: Push with dotnet
      if: github.event.action == 'published'
      run: dotnet nuget push nuget-packages/ --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
